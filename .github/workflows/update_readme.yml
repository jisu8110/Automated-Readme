# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Update README

# This one triggers whenever we push changes to docs/ directory
on:
  push:
    branches: [ main ]
    paths: 
      - 'docs/Python/*.py'
      - 'docs/CPP/*.cpp'
      - 'docs/CSharp/*.cs'
  pull_request:
    branches: [ main ]
    paths: 
      - 'docs/Python/*.py'
      - 'docs/CPP/*.cpp'
      - 'docs/CSharp/*.cs'

jobs:
  update-readme: # 이름 자유 아무거나
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest
        # if [ -f ./.github/config/requirements.txt ]; then pip install -r ./.github/config/requirements.txt; fi
        
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v44
      #   # with:
      #   #   since_last_remote_commit: true 

      # - name: List all changed files
      #   env:
      #     ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      #   run: |
      #     for file in ${ALL_CHANGED_FILES}; do
      #       echo "$file was changed"
      #     done
      
      - name: Update README
        run: |
          # accessed the $file_name from the $GITHUB_ENV
          file_name="$file_name"
          
          echo "FILENAME ==> $file_name"
          
          if [ -f "docs/Python/$file_name" ]; then
            echo "==FILE WAS CREATED=="
            file_link="docs/Python/$file_name"
            echo "FILE LINK ==> $file_link"
            python3 ./helpers/add_to_list.py ./README.md $file_name $file_link
          else
            echo "==FILE WAS DELETED=="
            python3 ./helpers/delete_line.py $file_name ./README.md
          fi  

      # - name: Run write_readme.py
      #   run: |
      #     python ../write_readme.py

      - name: Commit and Push Changes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@gmail.com"
          git add -A
          git commit -m "auto update README.md"
          git push origin main

            

    # steps:
    # - uses: actions/checkout@v3
    # - name: Set up Python ${{ matrix.python-version }}
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: ${{ matrix.python-version }}
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install python-leetcode
    # - name: Run update.py
    #   run: |
    #     python update.py
    # - name: Commit changes
    #   run: |
    #     git config --global user.name 'github nickname'
    #     git config --global user.email 'github email'
    #     git add -A
    #     git commit -am "auto update README.md"
    # - name: Push changes
    #   run: |
    #     git push
  
