# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Update README

# This one triggers whenever we push changes to docs/ directory
on:
  push:
    branches: [ main ]
    # paths: 
    #   - 'docs/Python/*.py'
    #   - 'docs/CPP/*.cpp'
    #   - 'docs/CSharp/*.cs'
  pull_request:
    branches: [ main ]
    # paths: 
    #   - 'docs/Python/*.py'
    #   - 'docs/CPP/*.cpp'
    #   - 'docs/CSharp/*.cs'

jobs:
  update-readme: # 이름 자유 아무거나
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install python-leetcode

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44
        # REF: https://github.com/marketplace/actions/changed-files

      - name: List all changed files
        env:
          ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}
          DELETED_FILES: ${{ steps.changed-files.outputs.deleted_files }}
          MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
          RENAMED_FILES: ${{ steps.changed-files.outputs.renamed_files }}
          UNKNOWN_FILES: ${{ steps.changed-files.outputs.unknown_files }}

          ANY_MODIFIED: ${{ steps.changed-files.outputs.any_modified }}
        run: |
          echo "========== ADDED_FILES"
          for file in ${ADDED_FILES}; do
            echo "$file"
          done
          echo "========== DELETED_FILES"
          for file in ${DELETED_FILES}; do
            echo "$file"
          done
          echo "========== MODIFIED_FILES"
          for file in ${MODIFIED_FILES}; do
            echo "$file"
          done
          echo "========== RENAMED_FILES"
          for file in ${RENAMED_FILES}; do
            echo "$file"
          done
          echo "========== UNKNOWN_FILES"
          for file in ${UNKNOWN_FILES}; do
            echo "$file"
          done
          echo ""
          echo "----------- ANY_MODIFIED"
          for file in ${ANY_MODIFIED}; do
            echo "$file"
          done

          FILE_LISTS=("$ADDED_FILES" "$DELETED_FILES" "$MODIFIED_FILES" "$RENAMED_FILES" "$UNKNOWN_FILES")
          for file in ${FILE_LISTS}; do
            python ./helpers/read_files.py $file
          done
          
      # - name: Read the First Line
      #   env:
      #     ANY_MODIFIED: ${{ steps.changed-files.outputs.any_modified }}
      #   run:
      #     for file in ${ANY_MODIFIED}; do
      #       python ./helpers/read_files.py $file
      #     done

        

      # - name: Update README
      #   env:
      #     ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}
      #     DELETED_FILES: ${{ steps.changed-files.outputs.deleted_files }}
      #     MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
      #     RENAMED_FILES: ${{ steps.changed-files.outputs.renamed_files }}
      #     UNKNOWN_FILES: ${{ steps.changed-files.outputs.unknown_files }}
      #   run: |
      #     echo "==== ADDED_FILES ===="
      #     for file in ${ADDED_FILES}; do
      #       file_link="docs/$file_name"
      #       echo "$file is added to $file_link"
      #       python3 ./helpers/add_to_list.py ./README.md $file $file_link
      #     done
      #     echo "==== DELETED_FILES ===="
      #     for file in ${DELETED_FILES}; do
      #       file_link="docs/$file_name"
      #       echo "$file is deleted to $file_link"
      #       python3 ./helpers/delete_line.py $file ./README.md
      #     done
      #     echo "==== MODIFIED_FILES ===="
      #     for file in ${MODIFIED_FILES}; do
      #       file_link="docs/$file_name"
      #       echo "$file is modified to $file_link"
      #     done
      #     echo "==== RENAMED_FILES ===="
      #     for file in ${RENAMED_FILES}; do
      #       file_link="docs/$file_name"
      #       echo "$file is renamed"
      #     done
      #     echo "==== UNKNOWN_FILES ===="
      #     for file in ${UNKNOWN_FILES}; do
      #       file_link="docs/$file_name"
      #       echo "$file is unknown"
      #     done




      # - name: Commit and Push Changes
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   run: |
      #     git config --global user.name "${{ github.actor }}"
      #     git config --global user.email "${{ github.actor }}23@gmail.com"
      #     git add -A
      #     git commit -m "auto update README.md"
      #     git push origin main


      # - name: Get file name
      #   id: file-name
      #   run: |
      #     commit_message=$(git log --format=%B -n 1 ${{ github.sha }})
      #     echo "==> COMMIT MESSAGE: $commit_message"
      #     file_name=$(echo $commit_message | cut -d' ' -f2)
      #     # echo "::set-output name=file_name::$file_name"
      #     # REF: https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/
      #     echo "file_name=$file_name" >> $GITHUB_ENV
          
    # - name: Set up Python 3.10
    #   uses: actions/setup-python@v3
    #   with:
    #     python-version: "3.10"
    # - name: Install dependencies
    #   run: |
    #     python -m pip install --upgrade pip
    #     pip install flake8 pytest
        # if [ -f ./.github/config/requirements.txt ]; then pip install -r ./.github/config/requirements.txt; fi
        
    # - name: Lint with flake8
    #   run: |
    #     # stop the build if there are Python syntax errors or undefined names
    #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
    #     # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
    #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      

      # - name: Get changed files
      #   id: changed-files
      #   uses: tj-actions/changed-files@v44
      #   # with:
      #   #   since_last_remote_commit: true 

      # - name: List all changed files
      #   env:
      #     ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
      #   run: |
      #     for file in ${ALL_CHANGED_FILES}; do
      #       echo "$file was changed"
      #     done
      # - name: Run write_readme.py
      #   run: |
      #     python ./write_readme.py

            